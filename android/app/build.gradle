plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def configProperties = new Properties()
def configPropertiesFile = rootProject.file("config.properties")
if (configPropertiesFile.exists()) {
    configPropertiesFile.withReader("UTF-8") { reader ->
        configProperties.load(reader)
    }
}


android {
    namespace = "com.asset_tracker.asset_tracker"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "com.asset_tracker.asset_tracker"
        minSdkVersion configProperties['minSdk']?.toInteger() ?: 21
        targetSdkVersion configProperties['targetSdk']?.toInteger() ?: 30
        versionCode configProperties['versionCode']?.toInteger() ?: 1
        versionName configProperties['versionName'] ?: "1.0.0"
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
